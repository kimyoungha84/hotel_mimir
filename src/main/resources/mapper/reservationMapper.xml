<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.sist.resvroom.ReservationMapper">

  <select id="selectAllResv" resultType="reservationDTO">
  SELECT 
    r.RESV_ID          AS resvId,
    r.ROOM_ID          AS roomId,
    rt.TYPE_NAME       AS typeName,
    CASE 
      WHEN r.NON_MEM_ID IS NULL AND r.USER_NUM IS NOT NULL THEN r.USER_NUM
      WHEN r.USER_NUM IS NULL AND r.NON_MEM_ID IS NOT NULL THEN r.NON_MEM_ID
    END AS userNum,
    CASE 
      WHEN r.NON_MEM_ID IS NULL AND r.USER_NUM IS NOT NULL THEN u.USER_NAME
      WHEN r.USER_NUM IS NULL AND r.NON_MEM_ID IS NOT NULL THEN nm.NON_MEM_NAME
    END AS userName,
    CASE 
      WHEN r.NON_MEM_ID IS NULL AND r.USER_NUM IS NOT NULL THEN u.TEL
      WHEN r.USER_NUM IS NULL AND r.NON_MEM_ID IS NOT NULL THEN nm.NON_MEM_TEL
    END AS userTel,
    CASE 
      WHEN r.NON_MEM_ID IS NULL AND r.USER_NUM IS NOT NULL THEN u.EMAIL_ID
      WHEN r.USER_NUM IS NULL AND r.NON_MEM_ID IS NOT NULL THEN nm.NON_MEM_EMAIL
    END AS userEmail,
    CASE 
      WHEN r.NON_MEM_ID IS NULL AND r.USER_NUM IS NOT NULL THEN 'true'
      WHEN r.USER_NUM IS NULL AND r.NON_MEM_ID IS NOT NULL THEN 'false'
    END AS isMember,
    r.PAYMENT_ID       AS paymentId,
    r.CHECKIN_DATE     AS checkinDate,
    r.CHECKOUT_DATE    AS checkoutDate,
    r.num_Guests_Child AS numGuestsChild,
    r.num_Guests_Adult AS numGuestsAdult,
    r.STATUS           AS status,
    r.RESV_REG_DATE    AS resvRegDate,
    r.REQUEST_MSG      AS requestMsg,
    p.PAYMENT_PRICE    AS paymentPrice
  FROM RESERVATION r
  LEFT JOIN ROOM rm ON r.ROOM_ID = rm.ROOM_ID
  LEFT JOIN ROOM_TYPE rt ON rm.TYPE_ID = rt.TYPE_ID
  LEFT JOIN MIMIR_USER u ON r.USER_NUM = u.USER_NUM
  LEFT JOIN NON_MEMBER nm ON r.NON_MEM_ID = nm.NON_MEM_ID
  LEFT JOIN PAYMENT p ON r.PAYMENT_ID = p.PAYMENT_ID
  ORDER BY r.RESV_ID ASC
  </select>
	
  <select id="selectReservationSeq" resultType="int">
    SELECT SEQ_RESERVATION.NEXTVAL FROM DUAL
	</select>
  
	<select id="selectOneResv" parameterType="int" resultType="reservationDTO">
	  SELECT 
    r.RESV_ID          AS resvId,
    r.ROOM_ID          AS roomId,
    rt.TYPE_NAME       AS typeName,
    CASE 
      WHEN r.NON_MEM_ID IS NULL AND r.USER_NUM IS NOT NULL THEN r.USER_NUM
      WHEN r.USER_NUM IS NULL AND r.NON_MEM_ID IS NOT NULL THEN r.NON_MEM_ID
    END AS userNum,
    CASE 
      WHEN r.NON_MEM_ID IS NULL AND r.USER_NUM IS NOT NULL THEN u.USER_NAME
      WHEN r.USER_NUM IS NULL AND r.NON_MEM_ID IS NOT NULL THEN nm.NON_MEM_NAME
    END AS userName,
    CASE 
      WHEN r.NON_MEM_ID IS NULL AND r.USER_NUM IS NOT NULL THEN u.TEL
      WHEN r.USER_NUM IS NULL AND r.NON_MEM_ID IS NOT NULL THEN nm.NON_MEM_TEL
    END AS userTel,
    CASE 
      WHEN r.NON_MEM_ID IS NULL AND r.USER_NUM IS NOT NULL THEN u.EMAIL_ID
      WHEN r.USER_NUM IS NULL AND r.NON_MEM_ID IS NOT NULL THEN nm.NON_MEM_EMAIL
    END AS userEmail,
    CASE 
      WHEN r.NON_MEM_ID IS NULL AND r.USER_NUM IS NOT NULL THEN 'true'
      WHEN r.USER_NUM IS NULL AND r.NON_MEM_ID IS NOT NULL THEN 'false'
    END AS isMember,
    r.PAYMENT_ID       AS paymentId,
    r.CHECKIN_DATE     AS checkinDate,
    r.CHECKOUT_DATE    AS checkoutDate,
    r.num_Guests_Child AS numGuestsChild,
    r.num_Guests_Adult AS numGuestsAdult,
    r.STATUS           AS status,
    r.RESV_REG_DATE    AS resvRegDate,
    r.REQUEST_MSG      AS requestMsg,
    p.PAYMENT_PRICE    AS paymentPrice,
    p.PAYMENT_STATUS    AS paymentStatus,
    p.PAYMENT_TYPE    AS paymentType
  FROM RESERVATION r
  LEFT JOIN ROOM rm ON r.ROOM_ID = rm.ROOM_ID
  LEFT JOIN ROOM_TYPE rt ON rm.TYPE_ID = rt.TYPE_ID
  LEFT JOIN MIMIR_USER u ON r.USER_NUM = u.USER_NUM
  LEFT JOIN NON_MEMBER nm ON r.NON_MEM_ID = nm.NON_MEM_ID
  LEFT JOIN PAYMENT p ON r.PAYMENT_ID = p.PAYMENT_ID
  WHERE r.resv_id = #{resvId}
  ORDER BY r.RESV_ID ASC
  </select>
	
	<insert id="insertNonMemberReservation" parameterType="kr.co.sist.resvroom.ReservationDTO">
		INSERT INTO RESERVATION (RESV_ID, ROOM_ID, NON_MEM_ID, PAYMENT_ID, CHECKIN_DATE, CHECKOUT_DATE, 
		NUM_GUESTS_CHILD, NUM_GUESTS_ADULT, STATUS, REQUEST_MSG, BREAKFAST)
		VALUES (#{resvId}, #{roomId}, #{userNum}, #{paymentId}, #{checkinDate}, #{checkoutDate},
		 #{numGuestsChild}, #{numGuestsAdult}, #{status}, #{requestMsg}, #{breakfast})
	</insert>
	
	<insert id="insertMemberReservation" parameterType="kr.co.sist.resvroom.ReservationDTO">
		INSERT INTO RESERVATION (RESV_ID, ROOM_ID, USER_NUM, PAYMENT_ID, CHECKIN_DATE, CHECKOUT_DATE, 
		NUM_GUESTS_CHILD, NUM_GUESTS_ADULT, STATUS, REQUEST_MSG, BREAKFAST)
		VALUES (#{resvId}, #{roomId}, #{userNum}, #{paymentId}, #{checkinDate}, #{checkoutDate},
		 #{numGuestsChild}, #{numGuestsAdult}, #{status}, #{requestMsg}, #{breakfast})
	</insert>
	

<select id="checkRoomAvailability" parameterType="kr.co.sist.resvroom.ReservationDTO" resultType="Integer">
    SELECT room_id
    FROM (
        SELECT r.room_id
        FROM room r
        JOIN room_type rt ON r.type_id = rt.type_id
        JOIN view_type vt ON r.view_id = vt.view_id
        JOIN bed_type bt ON r.bed_id = bt.bed_id
        WHERE rt.type_name =  #{typeName}
          AND vt.view_name = #{viewName}
          AND bt.bed_name = #{bedName}
          AND NOT EXISTS (
              SELECT 1
              FROM reservation res
              WHERE res.room_id = r.room_id
                AND res.status IN ('예약완료', '체크인')
                  AND res.checkin_date &lt; #{checkoutDate}
                AND res.checkout_date &gt; #{checkinDate}
          )
        ORDER BY DBMS_RANDOM.VALUE
    )
    WHERE ROWNUM = 1
</select>

<select id="loginUserData" parameterType="int" resultType="reservationDTO">
    SELECT USER_NUM userNum, EMAIL_ID userEmail, TEL userTel, USER_NAME userName
    FROM MIMIR_USER
    WHERE user_Num = #{userNum}
</select>


	<update id="updateReservation" parameterType="kr.co.sist.resvroom.ReservationDTO">
	  UPDATE faq
	  SET faq_title = #{faq_title},
	      faq_content = #{faq_content}
	  WHERE faq_num = #{faq_num}
	</update>
	
</mapper>